############################ input configuration sections
[CMRI]
path_to_search = ./training/
filename_contains = training_axial_full_
filename_not_contains = label
spatial_window_size = (144, 144, 144)
interp_order = 1
axcodes=(A, R, S)

[label]
path_to_search = ./training/
filename_contains = training_axial_full_, _A
spatial_window_size = (144, 144, 144)
interp_order = 0
axcodes=(A, R, S)

############################## system configuration sections
[SYSTEM]
cuda_devices = ""
num_threads = 2
num_gpus = 1
model_dir = ./models/
queue_length = 36

[NETWORK]
name = dense_vnet
batch_size = 6
normalisation = True
# volume level preprocessing
volume_padding_size = 0
window_sampling = resize

[TRAINING]
sample_per_volume = 1
lr = 0.001
loss_type = dense_vnet_abdominal_ct.dice_hinge.dice
starting_iter = 0
save_every_n = 1000
max_iter = 10001
# data augmentation
rotation_angle = (90, 180, 270)
random_flipping_axes = 1
scaling_percentage = (0.8, 1.2)
tensorboard_every_n = 20

[INFERENCE]
border = (0, 0, 0)
inference_iter = 3000
output_interp_order = 0
spatial_window_size = (144, 144, 144)
save_seg_dir = ./segmentation_output/

############################ custom configuration sections
[SEGMENTATION]
image = CMRI
label = label
label_normalisation = False
output_prob = False
num_classes = 3
